{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajni\\\\OneDrive\\\\Desktop\\\\BCS Notes\\\\Homework\\\\Final-React-Project-\\\\client\\\\src\\\\context.js\";\nimport React, { Component } from \"react\"; // import items from \"./data\";\n\nimport Client from \"./Contentful\";\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      feturedRooms: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getData = async () => {\n      try {\n        let response = await Client.getEntries({\n          content_type: \"islandResortProject\"\n        });\n        let rooms = this.formatData(response.items);\n        let featuredRooms = rooms.filter(room => room.fetured === true);\n        let maxPrice = Math.max(...rooms.map(item => item.price));\n        let maxSize = Math.max(...rooms.map(item => item.size));\n        this.setState({\n          rooms,\n          feturedRooms,\n          sortedRooms: rooms,\n          loading: false,\n          price: maxPrice,\n          maxPrice,\n          maxSize\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state; // all the rooms\n\n      let tempRooms = [...rooms]; // transform values\n      // get capacity\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); // filter by type\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } // filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } // filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } //filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    })));\n  };\n}","map":{"version":3,"sources":["C:/Users/rajni/OneDrive/Desktop/BCS Notes/Homework/Final-React-Project-/client/src/context.js"],"names":["React","Component","Client","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","feturedRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getData","response","getEntries","content_type","formatData","items","featuredRooms","filter","room","fetured","Math","max","map","item","size","setState","error","console","log","getRoom","slug","tempRooms","find","handleChange","event","target","value","checked","name","filterRooms","parseInt","componentDidMount","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import items from \"./data\";\r\nimport Client from \"./Contentful\";\r\n\r\n\r\nconst RoomContext = React.createContext();\r\n\r\nclass RoomProvider extends Component {\r\n  state = {\r\n    rooms: [],\r\n    sortedRooms: [],\r\n    feturedRooms: [],\r\n    loading: true,\r\n    type: \"all\",\r\n    capacity: 1,\r\n    price: 0,\r\n    minPrice: 0,\r\n    maxPrice: 0,\r\n    minSize: 0,\r\n    maxSize: 0,\r\n    breakfast: false,\r\n    pets: false\r\n  };\r\n\r\n  // API call\r\n  getData = async () => {\r\n    try {\r\n      let response = await Client.getEntries({\r\n        content_type: \"islandResortProject\"\r\n      });\r\n      let rooms = this.formatData(response.items);\r\n\r\n      let featuredRooms = rooms.filter(room => room.fetured === true);\r\n      let maxPrice = Math.max(...rooms.map(item => item.price));\r\n      let maxSize = Math.max(...rooms.map(item => item.size));\r\n\r\n      this.setState({\r\n        rooms,\r\n        feturedRooms,\r\n        sortedRooms: rooms,\r\n        loading: false,\r\n        price: maxPrice,\r\n        maxPrice,\r\n        maxSize\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  formatData(items) {\r\n    let tempItems = items.map(item => {\r\n      let id = item.sys.id;\r\n      let images = item.fields.images.map(image => image.fields.file.url);\r\n\r\n      let room = { ...item.fields, images, id };\r\n      return room;\r\n    });\r\n    return tempItems;\r\n  }\r\n  getRoom = slug => {\r\n    let tempRooms = [...this.state.rooms];\r\n    const room = tempRooms.find(room => room.slug === slug);\r\n    return room;\r\n  };\r\n  handleChange = event => {\r\n    const target = event.target\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value\r\n    const name = event.target.name;\r\n    this.setState(\r\n      {\r\n        [name]: value\r\n      },\r\n      this.filterRooms\r\n    );\r\n  };\r\n\r\n  filterRooms = () => {\r\n    let {\r\n      rooms,\r\n      type,\r\n      capacity,\r\n      price,\r\n      minSize,\r\n      maxSize,\r\n      breakfast,\r\n      pets\r\n    } = this.state;\r\n    // all the rooms\r\n    let tempRooms = [...rooms];\r\n    // transform values\r\n    // get capacity\r\n    capacity = parseInt(capacity);\r\n    price = parseInt(price);\r\n    // filter by type\r\n    if (type !== \"all\") {\r\n      tempRooms = tempRooms.filter(room => room.type === type);\r\n    }\r\n    // filter by capacity\r\n    if (capacity !== 1) {\r\n      tempRooms = tempRooms.filter(room => room.capacity >= capacity);\r\n    }\r\n    // filter by price\r\n    tempRooms = tempRooms.filter(room => room.price <= price);\r\n    //filter by size\r\n    tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize\r\n    );\r\n    //filter by breakfast\r\n    if (breakfast) {\r\n      tempRooms = tempRooms.filter(room => room.breakfast === true);\r\n    }\r\n    //filter by pets\r\n    if (pets) {\r\n      tempRooms = tempRooms.filter(room => room.pets === true);\r\n    }\r\n    this.setState({\r\n      sortedRooms: tempRooms\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <RoomContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          getRoom: this.getRoom,\r\n          handleChange: this.handleChange\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </RoomContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };\r\n\r\nexport function withRoomConsumer(Component) {\r\n  return function ConsumerWrapper(props) {\r\n    return (\r\n      <RoomConsumer>\r\n        {value => <Component {...props} context={value} />}\r\n      </RoomConsumer>\r\n    );\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}